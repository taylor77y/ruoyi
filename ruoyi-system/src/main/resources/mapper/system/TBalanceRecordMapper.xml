<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TBalanceRecordMapper">
    
    <resultMap type="TBalanceRecord" id="TBalanceRecordResult">
        <result property="id"    column="id"    />
        <result property="memberId"    column="member_id"    />
        <result property="currency"    column="currency"    />
        <result property="balanceType"    column="balance_type"    />
        <result property="fundsType"    column="funds_type"    />
        <result property="balanceBefore"    column="balance_before"    />
        <result property="balanceBack"    column="balance_back"    />
        <result property="balanceDifference"    column="balance_difference"    />
        <result property="createTime"    column="create_time"    />
        <result property="phone" column="phone"/>
        <result property="uuid" column="uuid"/>
        <result property="dataClassification" column="data_classification"/>
    </resultMap>

    <sql id="selectTBalanceRecordVo">
        select
            a.id, a.member_id, a.currency, a.balance_type,
            a.funds_type, a.balance_before, a.balance_back,
            a.balance_difference, a.create_time,b.phone,b.uuid,a.data_classification
        from t_balance_record a inner join t_member b on a.member_id = b.id
    </sql>

    <select id="selectTBalanceRecordList" parameterType="TBalanceRecord" resultMap="TBalanceRecordResult">
        <include refid="selectTBalanceRecordVo"/>
        <where>  
            <if test="memberId != null  and memberId != ''"> and a.member_id = #{memberId}</if>
            <if test="currency != null  and currency != ''"> and a.currency = #{currency}</if>
            <if test="balanceType != null "> and a.balance_type = #{balanceType}</if>
            <if test="fundsType != null "> and a.funds_type = #{fundsType}</if>
            <if test="balanceBefore != null "> and a.balance_before = #{balanceBefore}</if>
            <if test="balanceBack != null "> and a.balance_back = #{balanceBack}</if>
            <if test="balanceDifference != null "> and a.balance_difference = #{balanceDifference}</if>
            <if test="phone != null and phone != ''"> and b.phone = #{phone}</if>
            <if test="uuid != null and uuid != ''"> and b.uuid = #{uuid}</if>
            <if test="dataClassification != null"> and a.data_classification = #{dataClassification}</if>
            <if test="sysIds != null and sysIds.size>0">
                and b.sys_id in
                <foreach item="item" index="index" collection="sysIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by a.create_time desc
    </select>
    
    <select id="selectTBalanceRecordById" parameterType="Long" resultMap="TBalanceRecordResult">
        <include refid="selectTBalanceRecordVo"/>
        where a.id = #{id}
    </select>
        
    <insert id="insertTBalanceRecord" parameterType="TBalanceRecord" useGeneratedKeys="true" keyProperty="id">
        insert into t_balance_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberId != null">member_id,</if>
            <if test="currency != null">currency,</if>
            <if test="balanceType != null">balance_type,</if>
            <if test="fundsType != null">funds_type,</if>
            <if test="balanceBefore != null">balance_before,</if>
            <if test="balanceBack != null">balance_back,</if>
            <if test="balanceDifference != null">balance_difference,</if>
            <if test="dataClassification != null">data_classification,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberId != null">#{memberId},</if>
            <if test="currency != null">#{currency},</if>
            <if test="balanceType != null">#{balanceType},</if>
            <if test="fundsType != null">#{fundsType},</if>
            <if test="balanceBefore != null">#{balanceBefore},</if>
            <if test="balanceBack != null">#{balanceBack},</if>
            <if test="balanceDifference != null">#{balanceDifference},</if>
            <if test="dataClassification != null">#{dataClassification},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateTBalanceRecord" parameterType="TBalanceRecord">
        update t_balance_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="memberId != null">member_id = #{memberId},</if>
            <if test="currency != null">currency = #{currency},</if>
            <if test="balanceType != null">balance_type = #{balanceType},</if>
            <if test="fundsType != null">funds_type = #{fundsType},</if>
            <if test="balanceBefore != null">balance_before = #{balanceBefore},</if>
            <if test="balanceBack != null">balance_back = #{balanceBack},</if>
            <if test="balanceDifference != null">balance_difference = #{balanceDifference},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTBalanceRecordById" parameterType="Long">
        delete from t_balance_record where id = #{id}
    </delete>

    <delete id="deleteTBalanceRecordByIds" parameterType="String">
        delete from t_balance_record where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>